=begin
#ClickSend v3 REST API

# This is the official [ClickSend](https://clicksend.com) SDK.  *You'll need to create a free account to use the API. You can register [here](https://www.clicksend.com/signup).*  You can use our API documentation along with the SDK. Our API docs can be found [here](https://developers.clicksend.com). 

OpenAPI spec version: 3.1.0
Contact: support@clicksend.com
Generated by: https://github.com/clicksend-api/clicksend-codegen.git
ClickSend Codegen version: 2.4.0-SNAPSHOT

=end

require 'uri'

module ClickSendClient
  class UploadApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Upload File
    # Upload File
    # @param content Your base64 encoded file.
    # @param convert 
    # @param [Hash] opts the optional parameters
    # @return [String]
    def uploads_post(content, convert, opts = {})
      data, _status_code, _headers = uploads_post_with_http_info(content, convert, opts)
      data
    end

    # Upload File
    # Upload File
    # @param content Your base64 encoded file.
    # @param convert 
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def uploads_post_with_http_info(content, convert, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: UploadApi.uploads_post ...'
      end
      # verify the required parameter 'content' is set
      if @api_client.config.client_side_validation && content.nil?
        fail ArgumentError, "Missing the required parameter 'content' when calling UploadApi.uploads_post"
      end
      # verify the required parameter 'convert' is set
      if @api_client.config.client_side_validation && convert.nil?
        fail ArgumentError, "Missing the required parameter 'convert' when calling UploadApi.uploads_post"
      end
      # resource path
      local_var_path = '/uploads'

      # query parameters
      query_params = {}
      query_params[:'convert'] = convert

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params['content'] = content

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UploadApi#uploads_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
